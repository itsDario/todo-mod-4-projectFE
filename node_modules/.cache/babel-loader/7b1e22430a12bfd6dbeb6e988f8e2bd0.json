{"ast":null,"code":"import _objectSpread from \"/mnt/c/Users/Jeff/Desktop/Coding/Flatiron Proj/todo-mod-4-projectFE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/mnt/c/Users/Jeff/Desktop/Coding/Flatiron Proj/todo-mod-4-projectFE/src/components/calendar.js\";\nimport React from 'react';\nimport Year from '../containers/year';\nimport Month from '../containers/month';\nimport Day from './day';\nimport yearSelector from '../containers/yearselector';\nimport monthSelector from '../containers/monthselector';\nexport default class Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      year: this.props.today.split(' ')[3],\n      month: this.props.today.split(' ')[1],\n      day: this.props.today.split(' ')[2],\n      yearSelect: false,\n      monthSelect: false //////////////////////////Testing purposes only\n\n    };\n\n    this.createFeb = () => {\n      let february = [];\n\n      for (let n = 0; n < 31; n++) {\n        february.push({\n          id: \"February \".concat(n + 1, \", 2019\"),\n          num: n + 1,\n          events: []\n        });\n      }\n\n      return february;\n    };\n\n    this.createDays = () => {\n      return this.createFeb().map(day => {\n        return React.createElement(Day, {\n          key: day.id.getTime(),\n          day: _objectSpread({}, day),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.handleClick = event => {\n      if (this.state.yearSelect !== false || this.state.monthSelect !== false) {\n        this.setState({\n          yearSelect: false,\n          monthSelect: false\n        });\n      }\n\n      if (event.target.className === 'yearbut') {\n        this.setState({\n          yearSelect: !this.state.yearSelect\n        });\n      } else if (event.target.className === 'monthbut') {\n        this.setState({\n          monthSelect: !this.state.monthSelect\n        });\n      } else if (event.target.className === 'day') {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calendar\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Today is... \", this.props.today), React.createElement(Year, {\n      year: this.state.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), this.state.yearSelect ? yearSelector() : null, React.createElement(Month, {\n      month: this.state.month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.state.monthSelect ? monthSelector() : null, React.createElement(\"div\", {\n      className: \"days-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.createDays()));\n  }\n\n} // Calendar.defaultProps = {\n//     date: Date(Date.now())\n// }\n// export default Calendar\n// months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n// days = ['31', '28', '31', '30', '31', '30', '31', '31', '30', '31', '30', '31']","map":{"version":3,"sources":["/mnt/c/Users/Jeff/Desktop/Coding/Flatiron Proj/todo-mod-4-projectFE/src/components/calendar.js"],"names":["React","Year","Month","Day","yearSelector","monthSelector","Calendar","Component","state","year","props","today","split","month","day","yearSelect","monthSelect","createFeb","february","n","push","id","num","events","createDays","map","getTime","handleClick","event","setState","target","className","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Year from '../containers/year';\r\nimport Month from '../containers/month';\r\nimport Day from './day';\r\nimport yearSelector from '../containers/yearselector'\r\nimport monthSelector from '../containers/monthselector'\r\n\r\n\r\nexport default class Calendar extends React.Component{\r\n\r\n    state = {\r\n        year: this.props.today.split(' ')[3],\r\n        month: this.props.today.split(' ')[1],\r\n        day: this.props.today.split(' ')[2],\r\n        yearSelect: false,\r\n        monthSelect: false,\r\n    }\r\n\r\n\r\n    //////////////////////////Testing purposes only\r\n    createFeb = () => {\r\n        let february = []\r\n        for (let n = 0; n < 31; n++){\r\n            february.push({id: `February ${n+1}, 2019`, num: n+1, events: []})\r\n        }\r\n        return february;\r\n    }\r\n    //////////////////////////\r\n\r\n\r\n    createDays = () => {\r\n        return this.createFeb().map((day)=>{\r\n            return < Day key={day.id.getTime()} day={{...day}} />\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        if (this.state.yearSelect !== false || this.state.monthSelect !== false){\r\n            this.setState({\r\n                yearSelect: false,\r\n                monthSelect: false,\r\n            })\r\n        }\r\n        if (event.target.className === 'yearbut'){\r\n            this.setState({yearSelect: !this.state.yearSelect})\r\n        }\r\n        else if (event.target.className === 'monthbut'){\r\n            this.setState({monthSelect: !this.state.monthSelect})\r\n        }\r\n        else if (event.target.className === 'day'){\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"calendar\" onClick={this.handleClick}>\r\n            <h1>Today is... {this.props.today}</h1>\r\n            < Year year={this.state.year}/>\r\n            {(this.state.yearSelect ? yearSelector() : null)}\r\n            < Month month={this.state.month}/>\r\n            {(this.state.monthSelect ? monthSelector() : null)}\r\n            <div className='days-container'>\r\n                {this.createDays()}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// Calendar.defaultProps = {\r\n//     date: Date(Date.now())\r\n// }\r\n\r\n// export default Calendar\r\n\r\n\r\n// months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n// days = ['31', '28', '31', '30', '31', '30', '31', '31', '30', '31', '30', '31']"]},"metadata":{},"sourceType":"module"}