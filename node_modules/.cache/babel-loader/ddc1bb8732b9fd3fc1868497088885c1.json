{"ast":null,"code":"import _slicedToArray from \"/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/src/containers/sidebar.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst Sidebar = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewState = _useState2[0],\n        setviewState = _useState2[1];\n\n  const toggleCalendarForm = () => {\n    setviewState(!viewState);\n  };\n\n  const handleSubmit = event => {\n    props.addCalendar(event);\n    setviewState(!viewState);\n  };\n\n  const setView = () => {\n    if (viewState === false) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Upcoming Events\"), React.createElement(\"ol\", {\n        className: \"upcoming-events\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, createEvents()), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Your Calendars\"), React.createElement(\"ol\", {\n        className: \"user-calendars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, createCalendars()), React.createElement(\"button\", {\n        className: \"open-calendar-form\",\n        onClick: toggleCalendarForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Create New Calendar\"));\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Create New Calendar\"), React.createElement(\"form\", {\n        className: \"create-calendar\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"calendarName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }; // const submitCalendar = () => {\n  //     // fetch('http://localhost:3000/calendars', {\n  //     //     method: \"POST\",\n  //     //     headers: {\n  //     //     },\n  //     //     body: JSON.stringify({\n  //     //     })\n  //     // })\n  // }\n\n\n  const createEvents = () => {\n    return props.events.map(event => {\n      return React.createElement(\"li\", {\n        key: event.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, event.name);\n    });\n  };\n\n  const createCalendars = () => {\n    return props.calendars.map(calendar => {\n      return React.createElement(\"li\", {\n        key: calendar.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, calendar.name);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, setView());\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/src/containers/sidebar.js"],"names":["React","Fragment","useState","Sidebar","props","viewState","setviewState","toggleCalendarForm","handleSubmit","event","addCalendar","setView","createEvents","createCalendars","events","map","id","name","calendars","calendar"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const [viewState, setviewState] = useState(false);\r\n\r\n    const toggleCalendarForm = () => {\r\n        setviewState(!viewState)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        props.addCalendar(event)\r\n        setviewState(!viewState)\r\n    }\r\n\r\n    const setView = () => {\r\n        if (viewState === false) {\r\n            return <Fragment>\r\n                <h1>Upcoming Events</h1>\r\n                <ol className='upcoming-events'>\r\n                    {createEvents()}\r\n                </ol>\r\n                <h1>Your Calendars</h1>\r\n                <ol className='user-calendars'>\r\n                    {createCalendars()}\r\n                </ol>\r\n                <button className='open-calendar-form' onClick={toggleCalendarForm}>Create New Calendar</button>\r\n            </Fragment>\r\n        }\r\n        else {\r\n            return <Fragment>\r\n                <h2>Create New Calendar</h2>\r\n                <form className='create-calendar' onSubmit={handleSubmit}>\r\n                    <label>Name</label><br /><br />\r\n                    <input type='text' name='calendarName' /><br /><br />\r\n                    <input type='submit' value='submit' />\r\n                </form>\r\n            </Fragment>\r\n        }\r\n    }\r\n\r\n    // const submitCalendar = () => {\r\n    //     // fetch('http://localhost:3000/calendars', {\r\n    //     //     method: \"POST\",\r\n    //     //     headers: {\r\n\r\n    //     //     },\r\n    //     //     body: JSON.stringify({\r\n\r\n    //     //     })\r\n    //     // })\r\n\r\n    // }\r\n\r\n    const createEvents = () => {\r\n        return props.events.map(event => {\r\n            return <li key={event.id}>{event.name}</li>\r\n        })\r\n    };\r\n\r\n    const createCalendars = () => {\r\n        return props.calendars.map(calendar => {\r\n            return <li key={calendar.id}>{calendar.name}</li>\r\n        })\r\n    };\r\n\r\n    return <div className='sidebar'>\r\n        {setView()}\r\n    </div>\r\n}\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}