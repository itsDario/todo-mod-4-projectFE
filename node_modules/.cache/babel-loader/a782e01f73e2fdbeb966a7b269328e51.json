{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Jeff/Desktop/Coding/Flatiron Proj/todo-mod-4-projectFE/src/components/calendar.js\";\nimport React from 'react';\nimport Year from './year';\nimport Month from './month';\nimport Day from './day';\nimport yearSelector from '../containers/yearselector';\nimport monthSelector from '../containers/monthselector';\nexport default class Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      year: this.props.today.split(' ')[3],\n      month: this.props.today.split(' ')[1],\n      day: this.props.today.split(' ')[2],\n      yearSelect: false,\n      monthSelect: false //Testing purposes only\n\n    };\n\n    this.createFeb = () => {\n      let february = [];\n\n      for (let n = 0; n < 31; n++) {\n        february.push(n + 1);\n      }\n\n      return february;\n    };\n\n    this.createDays = () => {\n      return this.createFeb().map(day => {\n        return React.createElement(Day, {\n          key: day + this.state.month + this.state.year,\n          num: day,\n          events: {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.handleClick = event => {\n      if (event.target.className === 'year') {\n        this.setState({\n          yearSelect: true\n        });\n      } else if (event.target.className === 'month') {\n        this.setState({\n          monthSelect: true\n        });\n      } else if (event.target.className === 'day') {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calendar\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Today is...\", this.props.today), React.createElement(Year, {\n      today: this.props.today,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), () => {\n      this.state.yearSelect ? yearSelector() : null;\n    }, React.createElement(Month, {\n      today: this.props.today,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"days-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.createDays()));\n  }\n\n} // Calendar.defaultProps = {\n//     date: Date(Date.now())\n// }\n// export default Calendar\n// months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n// days = ['31', '28', '31', '30', '31', '30', '31', '31', '30', '31', '30', '31']","map":{"version":3,"sources":["/mnt/c/Users/Jeff/Desktop/Coding/Flatiron Proj/todo-mod-4-projectFE/src/components/calendar.js"],"names":["React","Year","Month","Day","yearSelector","monthSelector","Calendar","Component","state","year","props","today","split","month","day","yearSelect","monthSelect","createFeb","february","n","push","createDays","map","handleClick","event","target","className","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAGA,eAAe,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEjDC,KAFiD,GAEzC;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CADF;AAEJC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAFH;AAGJE,MAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAHD;AAIJG,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,WAAW,EAAE,KALT,CAQR;;AARQ,KAFyC;;AAAA,SAWjDC,SAXiD,GAWrC,MAAM;AACd,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AACxBD,QAAAA,QAAQ,CAACE,IAAT,CAAcD,CAAC,GAAC,CAAhB;AACH;;AACD,aAAOD,QAAP;AACH,KAjBgD;;AAAA,SAmBjDG,UAnBiD,GAmBpC,MAAM;AACf,aAAO,KAAKJ,SAAL,GAAiBK,GAAjB,CAAsBR,GAAD,IAAO;AAC/B,eAAO,oBAAE,GAAF;AAAM,UAAA,GAAG,EAAEA,GAAG,GAAG,KAAKN,KAAL,CAAWK,KAAjB,GAAyB,KAAKL,KAAL,CAAWC,IAA/C;AAAqD,UAAA,GAAG,EAAEK,GAA1D;AAA+D,UAAA,MAAM,EAAE,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH,KAvBgD;;AAAA,SAyBjDS,WAzBiD,GAyBlCC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACC,MAAN,CAAaC,SAAb,KAA2B,MAA/B,EAAsC;AAClC,aAAKC,QAAL,CAAc;AAACZ,UAAAA,UAAU,EAAE;AAAb,SAAd;AACH,OAFD,MAGK,IAAIS,KAAK,CAACC,MAAN,CAAaC,SAAb,KAA2B,OAA/B,EAAuC;AACxC,aAAKC,QAAL,CAAc;AAACX,UAAAA,WAAW,EAAE;AAAd,SAAd;AACH,OAFI,MAGA,IAAIQ,KAAK,CAACC,MAAN,CAAaC,SAAb,KAA2B,KAA/B,EAAqC,CAEzC;AACJ,KAnCgD;AAAA;;AAqCjDE,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,KAAKL,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKb,KAAL,CAAWC,KAA3B,CADG,EAEH,oBAAE,IAAF;AAAO,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,EAGF,MAAI;AAAC,WAAKH,KAAL,CAAWO,UAAX,GAAwBX,YAAY,EAApC,GAAyC,IAAzC;AAA8C,KAHjD,EAIH,oBAAE,KAAF;AAAQ,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJG,EAKH;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKU,UAAL,EADL,CALG,CAAP;AASH;;AA/CgD,C,CAoDrD;AACA;AACA;AAEA;AAGA;AACA","sourcesContent":["import React from 'react';\r\nimport Year from './year';\r\nimport Month from './month';\r\nimport Day from './day';\r\nimport yearSelector from '../containers/yearselector'\r\nimport monthSelector from '../containers/monthselector'\r\n\r\n\r\nexport default class Calendar extends React.Component{\r\n\r\n    state = {\r\n        year: this.props.today.split(' ')[3],\r\n        month: this.props.today.split(' ')[1],\r\n        day: this.props.today.split(' ')[2],\r\n        yearSelect: false,\r\n        monthSelect: false,\r\n    }\r\n\r\n    //Testing purposes only\r\n    createFeb = () => {\r\n        let february = []\r\n        for (let n = 0; n < 31; n++){\r\n            february.push(n+1)\r\n        }\r\n        return february;\r\n    }\r\n\r\n    createDays = () => {\r\n        return this.createFeb().map((day)=>{\r\n            return < Day key={day + this.state.month + this.state.year} num={day} events={{}} />\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        if (event.target.className === 'year'){\r\n            this.setState({yearSelect: true})\r\n        }\r\n        else if (event.target.className === 'month'){\r\n            this.setState({monthSelect: true})\r\n        }\r\n        else if (event.target.className === 'day'){\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"calendar\" onClick={this.handleClick}>\r\n            <h1>Today is...{this.props.today}</h1>\r\n            < Year today={this.props.today}/>\r\n            {()=>{this.state.yearSelect ? yearSelector() : null}}\r\n            < Month today={this.props.today}/>\r\n            <div className='days-container'>\r\n                {this.createDays()}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\n// Calendar.defaultProps = {\r\n//     date: Date(Date.now())\r\n// }\r\n\r\n// export default Calendar\r\n\r\n\r\n// months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n// days = ['31', '28', '31', '30', '31', '30', '31', '31', '30', '31', '30', '31']"]},"metadata":{},"sourceType":"module"}