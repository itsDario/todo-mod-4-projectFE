{"ast":null,"code":"import _objectSpread from \"/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navbar from './containers/navbar';\nimport Sidebar from './containers/sidebar';\nimport Calendar from './components/calendar';\nimport DayDock from './components/daydock';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hamburgerBtn = () => {\n      this.setState({\n        menuBtn: !this.state.menuBtn,\n        sidebar: !this.state.sidebar\n      });\n    };\n\n    this.addEvent = (event, date) => {\n      event.preventDefault();\n      console.log(event.target.name.value);\n      console.log(event.target.desc.value);\n      console.log(date);\n      let nevents = [...this.state.events];\n      fetch('http://localhost:3000/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          user: 1,\n          calender: 1,\n          date: \"\".concat(date) // desc: \"#{event.target.desc.value}\"\n          // name: \"#{event.target.name.value}\"\n\n        })\n      }).then(res => res.json()).then(res => {\n        nevents.push({\n          id: res['id'],\n          name: event.target.name.value,\n          calender: 1,\n          user: 1,\n          desc: event.target.desc.value\n        });\n        this.setState({\n          events: nevents\n        });\n      });\n    };\n\n    this.toggleDayDock = dayID => {\n      if (this.state.daydock === false) {\n        this.setState({\n          daydock: true,\n          spotlight: dayID\n        });\n      } else {\n        this.setState({\n          daydock: false,\n          spotlight: ''\n        });\n      }\n    };\n\n    this.openSidebar = () => {\n      if (this.state.sidebar === false) {\n        return null;\n      } else {\n        return React.createElement(Sidebar, {\n          user: _objectSpread({}, this.state.user),\n          events: this.state.events,\n          calendars: this.state.calendars,\n          addCalendar: this.addCalendar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.openDayDock = () => {\n      if (this.state.daydock === false) {\n        return null;\n      } else {\n        return React.createElement(DayDock, {\n          spotlight: this.state.spotlight,\n          addEvent: this.addEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.addCalendar = event => {\n      event.preventDefault(); // fetch(`http://localhost:3000/calendars`, {\n      //   method: 'POST',\n      //   headers: {\n      //   },\n      //   body: JSON.stringify({\n      //     name: event.target.name.value\n      //   })\n      // })\n\n      this.setState({\n        calendars: [...this.state.calendars, {\n          id: this.state.calendars.length + 1,\n          name: event.target.calendarName.value\n        }]\n      });\n    };\n\n    state = {\n      today: Date(Date.now()),\n      menuBtn: false,\n      user: {\n        name: 'Pidgey'\n      },\n      events: [{\n        id: 1,\n        name: 'Terrorize New Pokemon Trainers',\n        date: 5000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 2,\n        name: 'Event 2',\n        date: 50000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 3,\n        name: 'Event 3',\n        date: 500000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 4,\n        name: 'Event 4',\n        date: 500000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 5,\n        name: 'Event 5',\n        date: 5000000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }],\n      calendars: [{\n        id: 1,\n        name: 'Personal Calendar'\n      }, {\n        id: 2,\n        name: 'General Workspace Calendar'\n      }, {\n        id: 3,\n        name: 'Project 1 Calendar'\n      }, {\n        id: 4,\n        name: 'Project 2 Calendar'\n      }, {\n        id: 5,\n        name: 'Pidgey Mating Season'\n      }],\n      sidebar: false,\n      createCalendar: false,\n      daydock: false,\n      spotlight: ''\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        today: Date(Date.now())\n      });\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      hamburgerBtn: this.hamburgerBtn,\n      menuBtnState: this.state.menuBtn,\n      username: this.state.user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), this.openSidebar(), this.openDayDock(), React.createElement(Calendar, {\n      today: this.state.today,\n      toggleDayDock: this.toggleDayDock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }));\n  }\n\n} //use spotlight state to highlight day being viewed","map":{"version":3,"sources":["/Users/dariooropeza/Documents/Flatiron/todo-mod-4-project/todo-mod-4-projectFE/src/App.js"],"names":["React","Navbar","Sidebar","Calendar","DayDock","App","Component","constructor","props","hamburgerBtn","setState","menuBtn","state","sidebar","addEvent","event","date","preventDefault","console","log","target","name","value","desc","nevents","events","fetch","method","headers","body","JSON","stringify","user","calender","then","res","json","push","id","toggleDayDock","dayID","daydock","spotlight","openSidebar","calendars","addCalendar","openDayDock","length","calendarName","today","Date","now","createCalendar","componentDidMount","interval","setInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navbar from './containers/navbar'\nimport Sidebar from './containers/sidebar'\nimport Calendar from './components/calendar'\nimport DayDock from './components/daydock'\n\nexport default class App extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n\n    state = {\n      today: Date(Date.now()),\n      menuBtn: false,\n      user: {\n        name: 'Pidgey',\n      },\n      events: [{\n        id: 1,\n        name: 'Terrorize New Pokemon Trainers',\n        date: 5000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 2,\n        name: 'Event 2',\n        date: 50000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 3,\n        name: 'Event 3',\n        date: 500000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 4,\n        name: 'Event 4',\n        date: 500000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }, {\n        id: 5,\n        name: 'Event 5',\n        date: 5000000000,\n        desc: 'win every match',\n        calender: 1,\n        user: 1\n      }],\n      calendars: [{\n        id: 1,\n        name: 'Personal Calendar'\n      }, {\n        id: 2,\n        name: 'General Workspace Calendar'\n      }, {\n        id: 3,\n        name: 'Project 1 Calendar'\n      }, {\n        id: 4,\n        name: 'Project 2 Calendar'\n      }, {\n        id: 5,\n        name: 'Pidgey Mating Season'\n      }],\n      sidebar: false,\n      createCalendar: false,\n      daydock: false,\n      spotlight: '',\n    }\n\n  }\n\n\n  componentDidMount() {\n    this.interval = setInterval(() => { this.setState({ today: Date(Date.now()) }) }, 1000)\n  }\n\n  hamburgerBtn = () => {\n    this.setState({\n      menuBtn: !this.state.menuBtn,\n      sidebar: !this.state.sidebar\n    })\n  }\n\n  addEvent = (event, date) => {\n\n    event.preventDefault()\n    console.log(event.target.name.value)\n    console.log(event.target.desc.value)\n    console.log(date)\n    let nevents = [...this.state.events]\n    fetch('http://localhost:3000/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({\n        user: 1,\n        calender: 1,\n        date: `${date}`\n        // desc: \"#{event.target.desc.value}\"\n        // name: \"#{event.target.name.value}\"\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        nevents.push({\n          id: res['id'],\n          name: event.target.name.value,\n          calender: 1,\n          user: 1,\n          desc: event.target.desc.value\n        })\n        this.setState({\n          events: nevents\n        })\n      })\n  }\n\n  toggleDayDock = (dayID) => {\n    if (this.state.daydock === false) {\n      this.setState({\n        daydock: true,\n        spotlight: dayID,\n      })\n    }\n    else {\n      this.setState({\n        daydock: false,\n        spotlight: '',\n      })\n    }\n  }\n\n  openSidebar = () => {\n    if (this.state.sidebar === false) {\n      return null\n    }\n    else {\n\n      return < Sidebar user={{ ...this.state.user }} events={this.state.events} calendars={this.state.calendars} addCalendar={this.addCalendar} />\n    }\n  }\n\n  // openCreateCalendar = (event) => {\n  //   if (event.target.class === 'create-calendar'){\n  //     this.setState({\n  //       createCalendar: true\n  //     })\n  //   }\n  //   else{\n  //     this.setState({\n  //       createCalendar: false\n  //     })\n  //   }\n  // }\n\n  openDayDock = () => {\n    if (this.state.daydock === false) {\n      return null\n    }\n    else {\n      return < DayDock spotlight={this.state.spotlight} addEvent={this.addEvent} />\n    }\n  }\n\n  addCalendar = (event) => {\n    event.preventDefault()\n    // fetch(`http://localhost:3000/calendars`, {\n    //   method: 'POST',\n    //   headers: {\n\n    //   },\n    //   body: JSON.stringify({\n    //     name: event.target.name.value\n    //   })\n    // })\n    this.setState({\n      calendars: [...this.state.calendars, { id: this.state.calendars.length + 1, name: event.target.calendarName.value }]\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        < Navbar hamburgerBtn={this.hamburgerBtn} menuBtnState={this.state.menuBtn} username={this.state.user.name} />\n        {this.openSidebar()}\n        {this.openDayDock()}\n        < Calendar today={this.state.today} toggleDayDock={this.toggleDayDock} />\n      </div>\n    );\n  }\n}\n\n//use spotlight state to highlight day being viewed\n"]},"metadata":{},"sourceType":"module"}